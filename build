#!/bin/bash

usage()
{
	echo ""
	echo "Usage: `basename $0` <Release | Release32 | Debug | Debug32 | clean> [-jn] [-v]"
	echo "  -j: enable make '-j' option."
	echo "      if 'n' is not given, will set jobs to auto detected core count, otherwise n is used."
	echo "  -v: verbose make"
	echo ""
	exit 0
}

inform()
{
	echo ""
	echo "submodule vender is not existed!"
	echo "you can execute the given command to init and update it."
	echo " \$ git submodule init"
	echo " \$ git submodule update"
	echo ""
	exit 0
}

BUILD_TYPE=$1; shift 1;

if [ "$BUILD_TYPE" = "" ]; then
	usage
fi

if [ $BUILD_TYPE != 'Release' ] && [ $BUILD_TYPE != 'Release32' ] && [ $BUILD_TYPE != 'Debug' ] && [ $BUILD_TYPE != 'Debug32' ] && [ $BUILD_TYPE != 'clean' ]; then
	usage
fi

for i in "$@"
do
case $i in
	-j*) ENABLE_JOBS=1; BUILD_JOBS="${i#-j}"
		;;
	 -v) BUILD_VERBOSE='VERBOSE=1' 
		;;
	  *) usage
		;;
esac
done

if [ "$ENABLE_JOBS" = "1" -a "$BUILD_JOBS" = "" ]; then
	#get cpu core count 
	OS=$(uname)
	CPU_CORE=1
	case ${OS} in
		Darwin)
			CPU_CORE=$(sysctl hw.ncpu | awk '{print $2}')
			;;
		Linux)
			CPU_CORE=$(cat /proc/cpuinfo | grep processor | wc -l)
			;;
		Windows)
			CPU_CORE=$(echo $NUMBER_OF_PROCESSORS)
			;;
	esac
	echo "host machine has ${CPU_CORE} core"

	if [ "$CPU_CORE" = "1" ]; then
		BUILD_JOBS=""
	else
		# set build jobs with cpu core count
		BUILD_JOBS=${CPU_CORE}
	fi
fi

export BUILD_JOBS
export BUILD_VERBOSE

if [ -d vender ]; then 
	cd vender
	sh build $BUILD_TYPE
	if [ $? != 0 ]; then
		exit 1
	fi
	cd ..
else
	inform
fi

cd fibjs
sh build $BUILD_TYPE
if [ $? != 0 ]; then
	exit 1
fi
cd ..

if [ "$BUILD_TYPE" = "clean" ]; then
	if [ -e "bin" ]; then
		rm -rf "bin"
	fi
fi

