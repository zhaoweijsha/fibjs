/*! @brief 进程处理模块，用以管理当前进程的资源

 引用方法：
 @code
 var process = require('process');
 @endcode
 */
module process
{
    /*! @brief 返回当前进程的命令行参数 */
    static readonly Array argv;

    /*! @brief 返回当前进程的特殊命令行参数，这些参数被 fibjs 用于设置运行环境 */
    static readonly Array execArgv;

    /*! @brief 查询当前运行执行文件完整路径 */
    static readonly String execPath;

    /*! @brief 查询当前进程的环境变量 */
    static readonly Object env;

    /*! @brief 退出当前进程，并返回结果
     @param code 返回进程结果
     */
    static exit(Integer code);

    /*! @brief 返回操作系统当前工作路径
     @return 返回当前系统路径
     */
    static String cwd();

    /*! @brief 修改操作系统当前工作路径
     @param directory 指定设定的新路径
     */
    static chdir(String directory);

    /*! @brief 查询当前进程内存使用报告
     @return 返回包含内存报告

     内存报告生成类似以下结果：
     @code
     {
       "rss": 8622080,
       "heapTotal": 4083456,
       "heapUsed": 1621800
     }
     @endcode
     其中：
     - rss 返回进程当前占用物理内存大小
     - heapTotal 返回 v8 引擎堆内存大小
     - heapUsed 返回 v8 引擎正在使用堆内存大小
     */
    static Object memoryUsage();

    /*! @brief 运行指定的命令行，并返回运行结果
     @param cmd 指定运行的命令行
     @return 返回包含进程运行结果
     */
    deprecated static Integer system(String cmd) async;

    /*! @brief 运行指定的命令行，并返回进程的结束代码
     @param cmd 指定运行的命令行
     @return 返回包含运行结果的文件对象
     */
    deprecated static BufferedStream popen(String cmd) async;

    /*! @brief 运行指定的命令行，并立即返回
     @param cmd 指定运行的命令行
     */
    deprecated static exec(String cmd);

    /*! @brief 运行指定的命令行，接管进程输入输出流，并返回进程对象
     @param command 指定运行的命令行
     @param args 指定运行的参数列表
     @param opts 指定运行的选项，支持的选项如下：
     @code
        {
            "timeout": 100, // 单位为 ms
            "envs": [] // 进程环境变量
        }
     @endcode
     @return 返回包含运行结果的进程对象
     */
    static SubProcess open(String command, Array args, Object opts = {});

    /*! @brief 运行指定的命令行，接管进程输入输出流，并返回进程对象
     @param command 指定运行的命令行
     @param opts 指定运行的选项，支持的选项如下：
     @code
        {
            "timeout": 100, // 单位为 ms
            "envs": [] // 进程环境变量
        }
     @endcode
     @return 返回包含运行结果的进程对象
     */
    static SubProcess open(String command, Object opts = {});

    /*! @brief 运行指定的命令行，并返回进程对象
     @param command 指定运行的命令行
     @param args 指定运行的参数列表
     @param opts 指定运行的选项，支持的选项如下：
     @code
        {
            "timeout": 100, // 单位为 ms
            "envs": [] // 进程环境变量
        }
     @endcode
     @return 返回包含运行结果的进程对象
     */
    static SubProcess start(String command, Array args, Object opts = {});

    /*! @brief 运行指定的命令行，并返回进程对象
     @param command 指定运行的命令行
     @param opts 指定运行的选项，支持的选项如下：
     @code
        {
            "timeout": 100, // 单位为 ms
            "envs": [] // 进程环境变量
        }
     @endcode
     @return 返回包含运行结果的进程对象
     */
    static SubProcess start(String command, Object opts = {});

    /*! @brief 运行指定的命令行，并返回进程的结束代码
     @param command 指定运行的命令行
     @param args 指定运行的参数列表
     @param opts 指定运行的选项，支持的选项如下：
     @code
        {
            "timeout": 100, // 单位为 ms
            "envs": [] // 进程环境变量
        }
     @endcode
     @return 返回包含运行结果的进程对象
     */
    static Integer run(String command, Array args, Object opts = {});

    /*! @brief 运行指定的命令行，并返回进程的结束代码
     @param command 指定运行的命令行
     @param opts 指定运行的选项，支持的选项如下：
     @code
        {
            "timeout": 100, // 单位为 ms
            "envs": [] // 进程环境变量
        }
     @endcode
     @return 返回包含运行结果的进程对象
     */
    static Integer run(String command, Object opts = {});
};
